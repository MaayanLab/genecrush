////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Global CONSTANTS.
var margin = { top: 50, right: 10, bottom: 50, left: 10 },
    width = 650,
    height = 800,
    trans_duration = 2000,    // ms
    default_duration = 300,   // ms
    scale_X = d3.scale.ordinal().rangeBands([0, width]),
    scale_Y = d3.scale.ordinal().rangeBands([0, height]),
    matrix = [],
    terms = [],
    curr_mat = [],
    unq_gene_names = [],
    orig_nav_data = [],
    orig_nav_data_rep = [],
    curr_nav_data = [],
    nrow = 0,
    ncol = 0,
    curr_score = 0,
    prev_score = 0,
    ncol_shown = 10,
    curr_cell_width = 0,
    nav_width = width,
    nav_height = 150 - margin.top - margin.bottom,
    nav_scale_X = d3.scale.linear().range([0, nav_width]),
    svg_scale_X = d3.scale.linear().range([0, width]),
    nav_scale_Y = d3.scale.linear().range([0, nav_height]),
    nav_min = 0,
    nav_max = 0,
    curr_duration = default_duration,
    counter = 0,
    toggle_hl = 0,
    toggle_unq = 0,
    click_state = 0,
    played_whole_game = false,
    g_logged_in_status = false,
    user = {},
    g_id = {},
    toggle_sound = true,
    toggle_music = false;


// Global vairables.
var orders,
    selected_index_1,
    selected_index_2,
    current_index_order,
    scale_color,
    genes_unq,
    undefined_ind,
    duplicate_xy_list,
    dup_temp,
    nav_line,
    x_axis,
    y_axis;


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SVG's
var svg = d3.select("#main_game").append("svg").attr('class', 'svg')
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    // .style("margin-left", +margin.left + "px")
    .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")")

var label_svg = d3.select('.left').append('svg').attr('class', 'label_svg')
    .attr("width", 100)
    .attr("height", height + margin.top + margin.bottom)
    .append('g')
    .attr('transform', 'translate(0,' + margin.top + ")")

var nav_svg = d3.select('#main_game').append('svg').attr('class', 'navigator')
    .attr('width', nav_width + margin.left + margin.right)
    .attr('height', nav_height + margin.top + margin.bottom)
    .append('g')
    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Select Random json file.

// names of the files
names_of_the_files = [4, 5, 12, 19, 26, 39, 46, 53, 60, 67, 74, 88, 95, 102, 109, 116, 118, 123, 130, 136, 137, 143, 144, 151, 157, 158, 165, 174, 179, 188, 193, 200, 202, 207, 214, 221, 235, 249, 255, 256, 262, 263, 270, 276, 277, 284, 298, 304, 305, 312, 319, 326, 340, 347, 353, 354, 360, 361, 368, 389, 395, 396, 398, 402, 403, 409, 410, 417, 424, 431, 445, 452, 459, 461, 466, 480, 486, 487, 501, 508, 526, 528, 529, 531, 536, 538, 543, 557, 564, 577, 578, 584, 585, 598, 599, 606, 612, 613, 620, 622, 626, 627, 634, 641, 648, 655, 662, 669, 675, 676, 683, 690, 696, 697, 703, 709, 716, 723, 735, 736, 750, 757, 771, 777, 778, 785, 792, 799, 813, 827, 836, 840, 841, 855, 867, 868, 874, 882, 889, 895, 902, 904, 908, 909, 923, 936, 939, 958, 965, 973, 977, 978, 987, 991, 992, 999, 1001, 1006, 1008, 1012, 1013, 1015, 1019, 1020, 1034, 1048, 1055, 1062, 1076, 1083, 1090, 1097, 1104, 1111, 1118, 1125, 1132, 1146, 1153, 1160, 1166, 1167, 1186, 1187, 1200, 1201, 1210, 1222, 1229, 1243, 1250, 1264, 1266, 1270, 1271, 1272, 1277, 1279, 1283, 1284, 1286, 1290, 1305, 1312, 1318, 1319, 1326, 1333, 1340, 1353, 1354, 1358, 1367, 1368, 1382, 1388, 1389, 1396, 1402, 1405, 1410, 1419, 1424, 1431, 1438, 1444, 1452, 1459, 1466, 1475, 1476, 1479, 1480, 1485, 1486, 1492, 1493, 1507, 1514, 1521, 1535, 1548, 1549, 1562, 1563, 1572, 1577, 1584, 1598, 1605, 1612, 1618, 1632, 1639, 1646, 1666, 1667, 1676, 1681, 1688, 1699, 1708, 1709, 1716, 1723, 1730, 1737, 1743, 1744, 1751, 1758, 1765, 1771, 1778, 1785, 1792, 1798, 1805, 1812, 1819, 1826, 1833, 1835, 1840, 1846, 1853, 1860, 1867, 1874, 1881, 1888, 1902, 1909, 1923, 1937, 1944, 1946, 1950, 1956, 1959, 1963, 1964, 1971, 1978, 1985, 1992, 1999, 2006, 2013, 2020, 2022, 2027, 2041, 2047, 2048, 2055, 2062, 2068, 2075, 2076, 2090, 2096, 2097, 2103, 2104, 2111, 2113, 2132, 2151, 2158, 2160, 2167, 2171, 2172, 2179, 2185, 2186, 2192, 2199, 2200, 2206, 2220, 2221, 2227, 2233, 2234, 2240, 2241, 2254, 2255, 2264, 2269, 2276, 2278, 2283, 2303, 2304, 2306, 2324, 2325, 2339, 2352, 2353, 2360, 2369, 2374, 2383, 2388, 2395, 2397, 2402, 2411, 2413, 2416, 2423, 2425, 2430, 2439, 2444, 2453, 2458, 2467, 2472, 2481, 2482, 2493, 2507, 2514, 2521, 2528, 2535, 2542, 2549, 2563, 2570, 2577, 2583, 2584, 2590, 2591, 2605, 2617, 2618, 2631, 2632, 2651, 2652, 2666, 2673, 2675, 2680, 2687, 2700, 2701, 2722, 2731, 2736, 2750, 2764, 2778, 2785, 2792, 2799, 2806, 2813, 2820, 2822, 2826, 2827, 2836, 2841, 2847, 2857, 2868, 2875, 2881, 2882, 2895, 2896, 2903, 2909, 2910, 2923, 2924, 2933, 2937, 2947, 2952, 2965, 2974, 2978, 2979, 2986, 2993, 3000, 3002, 3007, 3015, 3019, 3020, 3040, 3046, 3047, 3054, 3063, 3081, 3082, 3088, 3089, 3098, 3124, 3131, 3145, 3152, 3154, 3158, 3159, 3168, 3169, 3173, 3186, 3195, 3199, 3200, 3213, 3220, 3233, 3234, 3240, 3241, 3248, 3253, 3260, 3267, 3274, 3281, 3288, 3294, 3295, 3302, 3308, 3309, 3323, 3330, 3344, 3358, 3367, 3372, 3379, 3385, 3386, 3395, 3399, 3400, 3413, 3414, 3421, 3442, 3444, 3449, 3454, 3460, 3474, 3481, 3488, 3490, 3494, 3495, 3502, 3515, 3536, 3543, 3549, 3556, 3569, 3576, 3583, 3585, 3590, 3597, 3604, 3611, 3617, 3632, 3639, 3646, 3658, 3659, 3666, 3673, 3680, 3682, 3686, 3687, 3694, 3700, 3701, 3714, 3715, 3722, 3734, 3735, 3737, 3742, 3748, 3749, 3756, 3770, 3777, 3783, 3788, 3789, 3796, 3803, 3809, 3816, 3829, 3837, 3844, 3858, 3864, 3871, 3872, 3874, 3882, 3891, 3892, 3901, 3906, 3913, 3915, 3920, 3934, 3936, 3941, 3948, 3954, 3960, 3961, 3975, 3982, 3988, 3989, 3996, 4000, 4003, 4009, 4012, 4017, 4024, 4040, 4045, 4052, 4065, 4072, 4078, 4079, 4092, 4093, 4100, 4107, 4114, 4128, 4135, 4142, 4144, 4149, 4156, 4165, 4170, 4184, 4191, 4193, 4198, 4207, 4212, 4226, 4233, 4239, 4240, 4252, 4253, 4261, 4266, 4268, 4273, 4285, 4286, 4292, 4298, 4304, 4307, 4312, 4314, 4318, 4326, 4332, 4340, 4347, 4354, 4360, 4361, 4363, 4375, 4377, 4382, 4389, 4391, 4396, 4402, 4403, 4409, 4410, 4416, 4417, 4424, 4431, 4437, 4444, 4451, 4458, 4465, 4472, 4479, 4485, 4486, 4492, 4493, 4514, 4516, 4521, 4528, 4534, 4535, 4541, 4542, 4549, 4555, 4556, 4563, 4570, 4576, 4577, 4590, 4591, 4598, 4604, 4605, 4621, 4626, 4633, 4640, 4647, 4652, 4653, 4666, 4667, 4674, 4676, 4680, 4681, 4694, 4695, 4702, 4709, 4722, 4723, 4729, 4730, 4741, 4742, 4754, 4755, 4775, 4776, 4782, 4790, 4797, 4810, 4811, 4823, 4824, 4836, 4837, 4851, 4871, 4872, 4878, 4879, 4886, 4899, 4900, 4906, 4907, 4921, 4936, 4947, 4950, 4957, 4962, 4974, 4981, 4990, 4995, 5009, 5016, 5023, 5029, 5030, 5043, 5044, 5051, 5057, 5058, 5065, 5067, 5068, 5071, 5072, 5074, 5075, 5078, 5079, 5086, 5089, 5093, 5099, 5113, 5126, 5127, 5131, 5136, 5140, 5143, 5155, 5162, 5169, 5175, 5176, 5182, 5183, 5190, 5195, 5196, 5210, 5216, 5223, 5230, 5237, 5244, 5257, 5258, 5266, 5271, 5285, 5291, 5298, 5304, 5311, 5317, 5324, 5331, 5338, 5345, 5359, 5366, 5373, 5380, 5387, 5393, 5394, 5408, 5414, 5427, 5430, 5441, 5442, 5444, 5456, 5462, 5463, 5470, 5477, 5484, 5491, 5497, 5498, 5505, 5512, 5519, 5525, 5526, 5540, 5542, 5547, 5549, 5554, 5568, 5570, 5574, 5580, 5581, 5588, 5595, 5601, 5602, 5604, 5608, 5609, 5616, 5630, 5632, 5633, 5637, 5651, 5653, 5658, 5664, 5671, 5677, 5684, 5691, 5695, 5704, 5707, 5712, 5719, 5725, 5739, 5746, 5748, 5753, 5766, 5772, 5773, 5775, 5776, 5779, 5780, 5793, 5800, 5814, 5827, 5828, 5831, 5834, 5841, 5843, 5848, 5855, 5857, 5858, 5862, 5871, 5875, 5876, 5885, 5890, 5897, 5901, 5904, 5911, 5913, 5918, 5925, 5932, 5939, 5946, 5959, 5960, 5967, 5969, 5974, 5981, 5985, 5988, 5994, 6001, 6008, 6015, 6021, 6022, 6029, 6036, 6038, 6042, 6043, 6050, 6057, 6070, 6071, 6077, 6078, 6085, 6091, 6092, 6105, 6106, 6120, 6127, 6134, 6141, 6148, 6150, 6155, 6162, 6164, 6168, 6169, 6175, 6176, 6182, 6183, 6190, 6197, 6204, 6210, 6211, 6225, 6232, 6252, 6261, 6265, 6266, 6273, 6279, 6280, 6287, 6293, 6294, 6308, 6314, 6315, 6334, 6335, 6341, 6348, 6361, 6362, 6369, 6376, 6381, 6388, 6396, 6411, 6416, 6423, 6430, 6436, 6437, 6450, 6456, 6462, 6463, 6477]
random = Math.floor(Math.random() * names_of_the_files.length);
var path = "json/from_random_crowd_sourcing/6478_1_936_6/";
path += names_of_the_files[random];
path += '_.json'

// Reference them to enrichr library
label_svg.append("text")
  .attr("class", "library1")
  .attr("x", 100)
  .attr("y", -20)
  .attr("dy", ".32em").attr("text-anchor", "end")
  .attr("font-size", 15)
  .attr("fill", "white")
  .text('LIBRARY :');

  $.ajax({
      type: "GET",
      url: '/user/getTopTen',
      dataType: 'text', 
      success: function(userData) {
        d3.select('.bd_hs_legend').text('Highest Score').style('font-size', '20px')
        var topTen = JSON.parse(userData);
        for (var i = 0; i < 10; i++) {
          var curr = topTen[i];
          if (curr != undefined && curr.username != undefined) {
            var n = curr.username.indexOf('@');
            var text = curr.username;
            text = text.replaceBetween(2,n-2,'****');
            text += ' --------->  ';
            text += curr.highest_score;
            text += ' pts'
            d3.select('.bd_hs_' + (i + 1)).text(text);
          }
        }
      },
      error: function(userData) {
        console.log('please_sign_in_using_ur_google_account');
      }
    });

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Read in the proper json file.

// d3.json("json/perfect_example.json", function(sample) {
// d3.json("json/Phosphatase_Substrates_SAMPLE.json", function(sample) {
// d3.json("json/from_enrichr/ENCODE_Histone_Modifications_2015.json", function(sample) {
// d3.json(path, function(sample) {

//   // Processes the visualizing of the "json"
//   make_viz(sample);
// });

String.prototype.replaceBetween = function(start, end, what) {
    return this.substring(0, start) + what + this.substring(end);
};